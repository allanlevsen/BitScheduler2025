// <auto-generated />
using System;
using BitSchedulerCore.Data.BitTimeScheduler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BitSchedulerCore.Migrations
{
    [DbContext(typeof(BitScheduleDbContext))]
    [Migration("20250216204238_UpdatesForResourceAndClient")]
    partial class UpdatesForResourceAndClient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BitSchedulerCore.BitClient", b =>
                {
                    b.Property<int>("BitClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BitClientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BitClientId");

                    b.ToTable("BitClients");
                });

            modelBuilder.Entity("BitSchedulerCore.BitReservation", b =>
                {
                    b.Property<int>("BitReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BitReservationId"));

                    b.Property<int?>("BitDayId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SlotLength")
                        .HasColumnType("int");

                    b.Property<int>("StartBlock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BitReservationId");

                    b.HasIndex("BitDayId");

                    b.ToTable("BitReservations");
                });

            modelBuilder.Entity("BitSchedulerCore.BitResource", b =>
                {
                    b.Property<int>("BitResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BitResourceId"));

                    b.Property<int>("BitClientId")
                        .HasColumnType("int");

                    b.Property<int>("BitResourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BitResourceId");

                    b.HasIndex("BitClientId");

                    b.HasIndex("BitResourceTypeId");

                    b.ToTable("BitResources");
                });

            modelBuilder.Entity("BitSchedulerCore.BitResourceType", b =>
                {
                    b.Property<int>("BitResourceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BitResourceTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BitResourceTypeId");

                    b.ToTable("BitResourceTypes");
                });

            modelBuilder.Entity("BitTimeScheduler.BitDay", b =>
                {
                    b.Property<int>("BitDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BitDayId"));

                    b.Property<long>("BitsHigh")
                        .HasColumnType("bigint");

                    b.Property<long>("BitsLow")
                        .HasColumnType("bigint");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsFree")
                        .HasColumnType("bit");

                    b.HasKey("BitDayId");

                    b.HasIndex("ClientId", "Date")
                        .IsUnique();

                    b.ToTable("BitDays");
                });

            modelBuilder.Entity("BitSchedulerCore.BitReservation", b =>
                {
                    b.HasOne("BitTimeScheduler.BitDay", null)
                        .WithMany("Reservations")
                        .HasForeignKey("BitDayId");
                });

            modelBuilder.Entity("BitSchedulerCore.BitResource", b =>
                {
                    b.HasOne("BitSchedulerCore.BitClient", "BitClient")
                        .WithMany("BitResources")
                        .HasForeignKey("BitClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitSchedulerCore.BitResourceType", "BitResourceType")
                        .WithMany("BitResources")
                        .HasForeignKey("BitResourceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BitClient");

                    b.Navigation("BitResourceType");
                });

            modelBuilder.Entity("BitSchedulerCore.BitClient", b =>
                {
                    b.Navigation("BitResources");
                });

            modelBuilder.Entity("BitSchedulerCore.BitResourceType", b =>
                {
                    b.Navigation("BitResources");
                });

            modelBuilder.Entity("BitTimeScheduler.BitDay", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
